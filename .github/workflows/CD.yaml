name: CD Pipeline

on:
    workflow_run:
      workflows: ["CI pipeline"]
      types:
        - completed
    workflow_dispatch:
      inputs:
        target:
          description: "Select deployment target: (aws/minikube)"
          required: true
          default: "minikube"

env:
   DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
   EKS_CLUSTER_NAME: ${{ vars.EKS_CLUSTER_NAME }}
   AWS_REGION: ${{ vars.AWS_REGION }}
   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
   ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}



jobs:
  deploy-to-minikube:
    runs-on: ubuntu-latest
    if: ${{github.event.inputs.target == 'minikube' }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Start minikube
        uses: medyagh/setup-minikube@latest

      - name: Check minikube status
        run: 
          minikube status

      - name: Create namespace
        run: kubectl create namespace space-launch-namespace

      - name: Deploy app to Kubernetes
        run: |  
          kubectl apply -f Kubernetes/JobDeployment.yaml
      
      - name: Wait for space job to complete
        run: |
          kubectl wait --for=condition=complete --timeout=30s job/space-launch-job

      - name: Deploy kube-bench to Kubernetes
        run: |  
          kubectl apply -f Kubernetes/KubeBenchJob.yaml

      - name: Wait for kube-bench job to complete
        run: |
          kubectl wait --for=condition=complete --timeout=30s job/kube-bench
     
      - name: See pods
        run: |
          kubectl get pods -A

      - name: See kube-bench logs
        run: |
          kubectl get pods -A | grep "kube-bench" | awk '{print $2}' | xargs -I {} kubectl logs {} | xargs -I {} grep "[FAIL]" {}

      - name: See logs
        run: |
          kubectl get pods -A | grep "space-launch-job" | awk '{print $2}' | xargs -I {} kubectl logs {} 


      - name: Stop minikube
        if: always()
        run: |
           minikube stop
           
  deploy-to-aws:
    runs-on: ubuntu-latest
    if: ${{github.event.inputs.target == 'aws' }} 
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: See current config
        run: |
          kubectl config current-context    
      
      - name: Deploy to EKS
        run: |
          kubectl apply -f Kubernetes/JobDeployment.yaml 



      - name: See current pods
        run: |
          kubectl get pods -A

      - name: See logs
        run: |
          kubectl get pods -A | grep "space-launch-job" | awk '{print $2}' | xargs -I {} kubectl logs {}


      - name: Delete deployment
        run: |
          kubectl delete -f Kubernetes/JobDeployment.yaml

      

      
      
