name: CI pipeline

on:
  # push:
  #   branches:
  #     - master

  workflow_dispatch:

env:
    DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs: 
  build-sast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Formatting Check
        run: dotnet format 
        
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp


      - name: Build
        run: dotnet build --configuration Release --no-restore
         
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Run tests
        run: dotnet test --no-restore --verbosity normal
        
      - name: Publish
        run: dotnet publish --configuration Release 
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: .


  snyk:
    runs-on: ubuntu-latest
    needs: [build-sast]

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        continue-on-error: true 
        env:
          SNYK_TOKEN: ${{env.SNYK_TOKEN}}
        with: 
          args: --sarif-file-output=snyk.sarif --file=./SpaceLaunch.sln

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

      

  scan-k8s-config:
    runs-on: ubuntu-latest
    needs: [snyk]

    steps:
       - name: Checkout
         uses: actions/checkout@v4

       - name: Scan repo with kube-linter
         uses: stackrox/kube-linter-action@v1.0.4
         continue-on-error: true
         with:
           args: do-not-auto-add-defaults
           directory: ./Kubernetes
           format: sarif
           output-file: kube-linter.sarif

       - name: Upload SARIF report to GitHub
         uses: github/codeql-action/upload-sarif@v3
         with:
           sarif_file: kube-linter.sarif
      
  
  docker-build-image:
    runs-on: ubuntu-latest
    needs: [scan-k8s-config]

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_USERNAME }}/devopsrepo:latest -f SpaceLaunch/Dockerfile .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.DOCKER_USERNAME }}/devopsrepo:latest
          format: 'sarif'
          ignore-unfixed: true
          severity: 'CRITICAL'
          output: trivy-report.sarif

      - name: Upload SARIF report to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-report.sarif


      - name: Push Docker image
        if: success()
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/devopsrepo:latest


  
        

   
  